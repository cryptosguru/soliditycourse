
# retrieve accounts

message "retrieving accounts..."
accounts

# compile contract
# (contracts variable has the compiled contract data)

message "compiling contract..."
compile "./contracts/federation.sol"

message "contract function hashes"
dump contracts.Federation.evm.methodIdentifiers

# deploy contract with three accounts

message "deploy contract with three federators"
deploy Federation federation [accounts[0],accounts[1],accounts[2]]

# federation size

call federation federationSize()

assert result == 3

message "federation size" result

# check federators

set n 0

while n < accounts.length
	call federation isFederator(address) accounts[n]

	assert result === (n < 3)
	
	set negation result == 0 ? " not " : " "
	
	message accounts[n] ("is" + negation + "a federator")

	set n n + 1
end

# add an account that is a federator

message "adding an existing federator"
invoke federation addFederator(address) accounts[0]

call federation federationSize()
assert result == 3

# add a new federator

message "adding a new federator"
invoke federation addFederator(address) accounts[3]

call federation federationSize()
assert result == 4

message "done"

